{"remainingRequest":"/Users/Elgin.Douglas/Downloads/vue-sample-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Elgin.Douglas/Downloads/vue-sample-master/src/views/exemple.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Elgin.Douglas/Downloads/vue-sample-master/src/views/exemple.vue","mtime":1549981634000},{"path":"/Users/Elgin.Douglas/Downloads/vue-sample-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Elgin.Douglas/Downloads/vue-sample-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Elgin.Douglas/Downloads/vue-sample-master/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/Elgin.Douglas/Downloads/vue-sample-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Elgin.Douglas/Downloads/vue-sample-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      postBody: '',\n      errors: []\n    }\n  },\n\n  // Pushes posts to the server when called.\n  postPost() {\n    axios.post(`http://jsonplaceholder.typicode.com/posts`, {\n      body: this.postBody\n    })\n    .then(response => {})\n    .catch(e => {\n      this.errors.push(e)\n    })\n\n    // async / await version (postPost() becomes async postPost())\n    //\n    // try {\n    //   await axios.post(`http://jsonplaceholder.typicode.com/posts`, {\n    //     body: this.postBody\n    //   })\n    // } catch (e) {\n    //   this.errors.push(e)\n    // }\n  }\n}\n",{"version":3,"sources":["exemple.vue"],"names":[],"mappings":";;;;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"exemple.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <input type=\"text\" v-model=\"postBody\" @change=\"postPost()\"/>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      postBody: '',\n      errors: []\n    }\n  },\n\n  // Pushes posts to the server when called.\n  postPost() {\n    axios.post(`http://jsonplaceholder.typicode.com/posts`, {\n      body: this.postBody\n    })\n    .then(response => {})\n    .catch(e => {\n      this.errors.push(e)\n    })\n\n    // async / await version (postPost() becomes async postPost())\n    //\n    // try {\n    //   await axios.post(`http://jsonplaceholder.typicode.com/posts`, {\n    //     body: this.postBody\n    //   })\n    // } catch (e) {\n    //   this.errors.push(e)\n    // }\n  }\n}\n</script>"]}]}